name: Run Application Tests

on:
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    name: Run Jest Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install Dependencies
      run: npm i

    - name: Set up environment variables
      run: |
        echo "DB_HOST=localhost" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
        echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
        echo "NODE_ENV=test" >> $GITHUB_ENV
        echo "POSTGRES_ADMIN_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV

    - name: Run Database Initialization Script
      run: |
        node -r dotenv/config src/config/initDatabase.js
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        NODE_ENV: test
        POSTGRES_ADMIN_USER: ${{ secrets.DB_USER }}

    - name: Run Tests
      run: npm test
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        NODE_ENV: test