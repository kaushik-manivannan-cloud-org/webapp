name: Run Application Tests

on:
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    name: Run Jest Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create pg_hba.conf
      run: |
        echo "local all all trust" > pg_hba.conf
        echo "host all all 127.0.0.1/32 trust" >> pg_hba.conf
        echo "host all all ::1/128 trust" >> pg_hba.conf

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install Dependencies
      run: npm ci

    - name: Start PostgreSQL
      run: |
        docker run -d \
          --name postgres \
          -e POSTGRES_DB=${{ secrets.DB_NAME }} \
          -e POSTGRES_USER=${{ secrets.DB_USER }} \
          -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
          -v ${{ github.workspace }}/pg_hba.conf:/etc/postgresql/pg_hba.conf \
          -p 5432:5432 \
          postgres:13 \
          -c 'hba_file=/etc/postgresql/pg_hba.conf'

    - name: Wait for PostgreSQL to be ready
      run: |
        while ! docker exec postgres pg_isready -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }}; do
          sleep 1
        done

    - name: Run Database Initialization Script
      run: |
        node -r dotenv/config src/config/initDatabase.js
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        POSTGRES_ADMIN_USER: ${{ secrets.DB_USER }}

    - name: Run Tests
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: npm test